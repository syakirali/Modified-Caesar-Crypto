/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kripto;

import java.util.List;
import javax.swing.JFrame;

/**
 *
 * @author SAM-PC
 */
public class GUIUtama extends javax.swing.JFrame {
    
    final String s1 = "AOEIU";
    final String s2 = "BDJMPRLSCFHKTW";
    final String s3 = "GNQVXYZ";
//    final Character[] list1 = {'A', 'O', 'E', 'I', 'U'};
//    final Character[] list2 = {}
//    List<Character> list1 = new List<Character>{'A', 'B'};

    /**
     * Creates new form GUIUtama
     */
    public GUIUtama() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_plain = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_chiper = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        b_encrypt = new javax.swing.JButton();
        b_decrypt = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        s_key = new javax.swing.JSpinner();
        b_kelompok = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        jMenuItem1.setText("jMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Plain Text");

        jLabel2.setText("Key");

        ta_plain.setColumns(20);
        ta_plain.setRows(5);
        jScrollPane1.setViewportView(ta_plain);

        ta_chiper.setColumns(20);
        ta_chiper.setRows(5);
        jScrollPane2.setViewportView(ta_chiper);

        jLabel3.setText("Chiper Text");

        b_encrypt.setText("Encrypt");
        b_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_encryptActionPerformed(evt);
            }
        });

        b_decrypt.setText("Decrypt");
        b_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_decryptActionPerformed(evt);
            }
        });

        b_clear.setText("Clear");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });

        b_kelompok.setText("Kelompok");
        b_kelompok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kelompokActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(b_kelompok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_encrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_decrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_clear))
                    .addComponent(s_key))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(s_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_encrypt)
                    .addComponent(b_decrypt)
                    .addComponent(b_clear)
                    .addComponent(b_kelompok))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getString(char a){
        if (a == ' ') {
            return "  ";
        }
        else if (s1.contains("" + a)) {
            return s1;
        }
        else if (s2.contains("" + a)) {
            return s2;
        }
        else return "" + a + a;
    }
    
    private String encrypt(String plain, int key) {
        String chiper = "Masukkan Key !";
        for (int j=0; j<key;j++) {
            chiper = "";
            for (int i=0; i<plain.length(); i++) {
                char c = plain.charAt(i);
                String string = getString(Character.toUpperCase(c));
                int a = string.indexOf("" + Character.toUpperCase(c));
                char res = string.charAt((a+1)%string.length());
                if (Character.isLowerCase(c)) {
                    res = Character.toLowerCase(res);
                }
                chiper += res;
            }
            plain = chiper;
        }
        return chiper;
//        return "encrypted";
    }
    
    private String decrypt(String chiper, int key) {
        String plain = "Masukkan Key !";
        for (int j=0; j<key;j++) {
            plain = "";
            for (int i=0; i<chiper.length(); i++) {
                char c = chiper.charAt(i);
                String string = getString(Character.toUpperCase(c));
                int a = string.indexOf("" + Character.toUpperCase(c));
                if (a-1 < 0) {
                    a = string.length() - 1;
                }
                else a = a-1;
                char res = string.charAt(a);
                if (Character.isLowerCase(c)) {
                    res = Character.toLowerCase(res);
                }
                plain += res;
            }
            chiper = plain;
        }
        return plain;
    }
    
    private void b_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_encryptActionPerformed
        // TODO add your handling code here:
        String plain = ta_plain.getText();
        int key = -1;
        try{
            key = (Integer) s_key.getValue();
        } catch (Exception e) {
            
        }
        String chiper = encrypt(plain, key);
        ta_chiper.setText(chiper);
    }//GEN-LAST:event_b_encryptActionPerformed

    private void b_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_decryptActionPerformed
        // TODO add your handling code here:
        String chiper = ta_chiper.getText();
        int key = -1;
        try{
            key = (Integer) s_key.getValue();
        } catch (Exception e) {
            
        }
        String plain = decrypt(chiper, key);
        System.out.println("plain : " + plain);
        ta_plain.setText(plain);
    }//GEN-LAST:event_b_decryptActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        // TODO add your handling code here:
        ta_chiper.setText("");
        ta_plain.setText("");
        s_key.setValue(Integer.valueOf("0"));
    }//GEN-LAST:event_b_clearActionPerformed

    private void b_kelompokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kelompokActionPerformed
        // TODO add your handling code here:
        About3 a = new About3();
        a.setTitle("About");
        a.setLocationRelativeTo(null);
        a.setVisible(true);
        a.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        a.setResizable(false);
    }//GEN-LAST:event_b_kelompokActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_decrypt;
    private javax.swing.JButton b_encrypt;
    private javax.swing.JButton b_kelompok;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JSpinner s_key;
    private javax.swing.JTextArea ta_chiper;
    private javax.swing.JTextArea ta_plain;
    // End of variables declaration//GEN-END:variables
}
